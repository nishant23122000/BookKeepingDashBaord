{"version":3,"sources":["utils/axios.js","store/actions/bookAction.js","store/actions/actionType.js","store/actions/dataAction.js","components/overlays/AddNewPurchase/AddNewPurchase.js","components/overlays/AddNewSale/AddNewsale.js","components/overlays/CreateNewBook/CreateNoteBook.js","components/overlays/Accordion.js","components/overlays/Help/Help.js","components/overlays/Settings/Settings.js","store/actions/userAction.js","components/overlays/UpdateBook/Updatebook.js","components/Drawer.js","Layout/Header/Header.js","utils/pdfGenerator.js","components/Transaction/Transactions.js","components/Book/BookDetail/Bookdetail.js","store/actions/authAction.js","components/Dialog/Dialog.js","components/Menu/Menu.js","Pages/DashBoard/Dashbaord.js","store/reducers/userReducer.js","store/reducers/bookReducer.js","store/reducers/reducer.js","store/store.js","utils/firebase.js","Pages/Login/Login.js","App.js","serviceWorker.js","index.js","Assets/Svg/app-logo.svg"],"names":["axios","defaults","baseURL","getBook","dispatch","a","get","localStorage","getItem","result","type","payload","data","book","console","log","save_purchase_record","purchase_data","record_offline_id","edit","book_offline_id","put","window","location","reload","post","href","newDate","Date","date","getDate","month","getMonth","year","getFullYear","AddNewPurchase","props","handleInputChange","e","target","name","setState","value","total_amount","state","price","quantity","credit","cash","handleClick","person","product_name","toString","unit_size","unit","qantity","time","purchase","offline_id","parseInt","Math","random","sell","edit_data","s_id","savePurchase","isEdit","activeId","onClose","getHours","getMinutes","className","onClick","this","style","marginLeft","onChange","placeholder","width","background","border","id","padding","position","bottom","Component","connect","recentBookId","AddNewSale","activeid","CreateNoteBook","userID","handleInputChnage","addBook","bookName","disaptch","toLocaleString","split","Accordion","title","content","useState","isActive","setIsActive","cursor","Help","accordionData","titleHindi","contentHindi","React","lang","setLang","backgroundColor","color","map","Settings","handleEdit","val","handleSubmit","key","update","user","isNameOpen","isBNOpen","isMNOpen","isCOpen","user_name","bName","business_name","mobile","phone_no","currency","marginTop","Tooltip","isAuth","removeItem","textDecoration","userD","userData","update_user","UpdateBook","updateBook","userId","user_id","bookId","book_name","response","DrawerSection","toggleDrawer","anchor","open","event","compo","right","Fragment","Drawer","AddNewsale","fontSize","margin","Header","display","height","src","Logo","alt","fontWeight","filterData","records","recordRows","forEach","record","push","total_sale","Number","total_purchase","total_cash","total_credit","doc","jsPDF","setFontSize","text","tableRows","sum","autoTable","startY","last_row","save","generatePDFUtil","filterRecord","Transactions","activeBook","bookData","bookRecord","overflowY","length","top","left","transform","bookRecords","payment","dateType","entiry_type","finalCurrentData","BookDetails","getTotalSale","filter","getTotalPurchase","getFinalBalance","amount","entry","getTotalCash","getTotalCredit","handlePaymentChange","payment_type_id","applyFilter","handleDateChange","date_type_id","handleEntityChange","entity_type_id","handleSearchChange","bookid","pathname","filterId","filterType","set_filter","get_user_status","CustomDialog","Dialog","keepMounted","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogActions","Button","onClickYes","MenuCustom","handleClickOpen","isOpen","handleDeleteBook","deleteBook","Menu","anchorEl","Boolean","MenuItem","delete","delete_book","Dashbaord","currentTarget","handleBookClick","setRecordWithId","activeLink","books","borderRadius","to","path","setUser","initialState","userReducer","action","updated_user","dataReducer","updated_book","updated_books","update_books","new_book","find","sellbook","sort","b","getTime","currentFilter","filterConfig","entity","search","startsWith","finalDate","curr","firstday","setDate","getDay","lastday","combineReducers","createStore","reducer","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","generateOtp","num","captchaRef","cb","showOTP","recaptch","auth","RecaptchaVerifier","current","number","signInWithPhoneNumber","Login","status","isInProcess","login","res","isOtpShow","phone","handleOtp","otp","submitOTP","confirm","then","catch","error","isErrorShow","createRef","list-style-type","country","ref","uid","setItem","phoneNumber","refreshToken","login_user","App","store","getState","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.f59febbc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://ec2-18-191-151-100.us-east-2.compute.amazonaws.com\";\r\nexport default axios;","import axios from \"../../utils/axios\";\r\nimport { ADD_BOOK, SET_BOOK, UPDATE_BOOK, DELETE_BOOK } from \"../actions/actionType\";\r\nexport const getBook = () => async dispatch => {\r\n    try {\r\n        const result = await axios.get(`/getbook/${localStorage.getItem('id')}`);\r\n        dispatch({\r\n            type: SET_BOOK,\r\n            payload: result.data.book\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport const add_book = (bookName) => async disaptch => {\r\n    const date = new Date();\r\n    let payload = date.toLocaleString().split(',');\r\n\r\n    const data = {\r\n        \"book_id\": Math.random(),\r\n        \"book_name\": bookName,\r\n        \"date\": payload[0],\r\n        \"time\": payload[1],\r\n        \"offline_id\": Math.random(),\r\n    }\r\n\r\n    try {\r\n        await axios.post(`/sellregister/savebook/${localStorage.getItem(\"id\")}`, data);\r\n        disaptch({ type: ADD_BOOK, payload: data })\r\n        window.location.reload();\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const delete_book = (id, user) => async dispatch => {\r\n\r\n\r\n\r\n    try {\r\n\r\n        await axios.delete(`/sellregister/deletebook/${id}/${localStorage.getItem(\"id\")}`);\r\n        dispatch({ type: DELETE_BOOK, payload: id });\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const update_book = (bookName, user, id) => async dispatch => {\r\n\r\n    try {\r\n\r\n        await axios.put(`/sellregister/updatebook/${id}/${localStorage.getItem(\"id\")}`, {\r\n            book_name: bookName,\r\n            offline_id: id\r\n        })\r\n        dispatch({\r\n            type: UPDATE_BOOK, payload: {\r\n                bookName, id\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\n","export const SAVE_USER = \"SAVE_USER\"\r\nexport const SET_USER = \"SET_USER\"\r\n\r\nexport const ADD_BOOK = \"ADD_BOOK\";\r\nexport const SET_BOOK = \"SET_BOOK\";\r\nexport const UPDATE_BOOK = \"UPDATE_BOOK\";\r\nexport const DELETE_BOOK = \"DELETE_BOOK\";\r\nexport const SET_RECORD = \"SET_RECORD\";\r\n\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\n\r\nexport const SET_FILTER = \"SET_FILTER\";\r\nexport const APPLY_FILTER = \"APPLY_FILTER\";\r\n","import axios from \"../../utils/axios\";\r\nimport { SET_FILTER, APPLY_FILTER, SET_RECORD } from \"./actionType\";\r\nimport { getBook } from \"./bookAction\";\r\nexport const save_purchase_record = (purchase_data, record_offline_id, edit, book_offline_id) => async dispatch => {\r\n\r\n    try {\r\n        if (edit) {\r\n\r\n            // console.log(s_id)\r\n\r\n\r\n            let res = await axios.put(`sellregister/updatedocument/456/${book_offline_id}/${localStorage.getItem(\"id\")}`, purchase_data);\r\n\r\n            window.location.reload();\r\n\r\n        } else {\r\n\r\n            await axios.post(`/sellregister/document/${book_offline_id}/${localStorage.getItem(\"id\")}`, purchase_data);\r\n            dispatch({ type: SET_RECORD, payload: purchase_data });\r\n            dispatch(getBook());\r\n            window.location.href = `/${book_offline_id}`;\r\n        }\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\nexport const set_filter = (filterId, filterType, bookId) => dispatch => {\r\n    dispatch({\r\n        type: SET_FILTER, payload: {\r\n            filterId, filterType\r\n        }\r\n    })\r\n    dispatch({\r\n        type: APPLY_FILTER\r\n    })\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./AddNewPurchase.scss\"\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport { connect } from \"react-redux\";\r\nimport { save_purchase_record } from \"../../../store/actions/dataAction\";\r\n\r\nlet newDate = new Date()\r\nlet date = newDate.getDate();\r\nlet month = newDate.getMonth() + 1;\r\nlet year = newDate.getFullYear();\r\n\r\nclass AddNewPurchase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            person: this.props.isEdit && this.props.data != null ? this.props.data.person : \"\",\r\n            product_name: this.props.isEdit && this.props.data != null ? this.props.data.product_name : \"\",\r\n            price: this.props.isEdit && this.props.data != null ? this.props.data.price : \"\",\r\n            unit_size: this.props.isEdit && this.props.data != null ? this.props.data.unit_size : \"KG\",\r\n            unit: this.props.isEdit && this.props.data != null ? this.props.data.unit : 1,\r\n            quantity: this.props.isEdit && this.props.data != null ? this.props.data.quantity : 1,\r\n            cash: this.props.isEdit && this.props.data != null ? this.props.data.cash : 0,\r\n            date: this.props.isEdit && this.props.data != null ? this.props.data.date : `${year}-${month < 10 ? `0${month}` : `${month}`}-${date < 10 ? `0${date}` : `${date}`}`,\r\n            time: this.props.isEdit && this.props.data != null ? this.props.data.time : newDate.getHours() + \":\" + newDate.getMinutes(),\r\n            credit: this.props.isEdit && this.props.data != null ? this.props.data.credit : 0,\r\n            purchase: this.props.isEdit && this.props.data != null ? this.props.data.purchase : 0,\r\n            total_amount: this.props.isEdit && this.props.data != null ? this.props.data.quantity * this.props.data.price : 0,\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        let type = e.target.name;\r\n\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        }, () => {\r\n            if (type === \"quantity\" || type === \"price\") {\r\n\r\n                this.setState({\r\n                    total_amount: this.state.price * this.state.quantity,\r\n\r\n                })\r\n            }\r\n            if (type === \"cash\") {\r\n                this.setState({\r\n                    credit: this.state.total_amount - this.state.cash\r\n                })\r\n            }\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    handleClick = () => {\r\n        let data = {\r\n            person: [this.state.person],\r\n            product_name: [this.state.product_name],\r\n            price: [this.state.price.toString()],\r\n            unit_size: [this.state.unit_size.toString()],\r\n            unit: [this.state.unit.toString()],\r\n            qantity: [this.state.quantity.toString()],\r\n            cash: [this.state.cash.toString()],\r\n            date: [this.state.date.toString()],\r\n            time: [this.state.time.toString()],\r\n            credit: [this.state.credit.toString()],\r\n            purchase: [this.state.purchase.toString()],\r\n            offline_id: [parseInt(Math.random() * 10000000000000)],\r\n            sell: [\"purchase\"]\r\n        }\r\n        let edit_data = {\r\n            s_id: this.props.data.s_id,\r\n            person: this.state.person,\r\n            product_name: this.state.product_name,\r\n            price: this.state.price.toString(),\r\n            unit_size: this.state.unit_size.toString(),\r\n            unit: !this.state.unit ? \"1\" : this.state.unit.toString(),\r\n            quantity: this.state.quantity.toString(),\r\n            cash: this.state.cash.toString(),\r\n            date: this.state.date.toString(),\r\n            time: this.state.time.toString(),\r\n            credit: this.state.credit.toString(),\r\n            purchase: this.state.purchase.toString(),\r\n            offline_id: this.props.data.offline_id,\r\n            sell: \"purchase\"\r\n        }\r\n\r\n        this.props.savePurchase(this.props.isEdit ? edit_data : data, this.props.data.offline_id, this.props.isEdit, this.props.activeId);\r\n        this.props.onClose(\"right\", false);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"purchase_sidebar\">\r\n                <div className=\"purchase_sidebar_header\">\r\n                    <div className=\"purchase_title\">\r\n                        <BsArrowLeft className=\"icon\" onClick={this.props.onClose} />\r\n                        <div style={{ marginLeft: \"10px\" }}>{this.props.isEdit ? \"Update Purchase\" : \"Add New Purchase\"}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"purchase_sidebar_form\">\r\n                    <div className=\"purchase_sidebar_date_time\">\r\n\r\n                        <input\r\n                            type=\"date\"\r\n                            value={this.state.date}\r\n                            name=\"date\"\r\n                            className=\"date_time\"\r\n                            onChange={this.handleInputChange} />\r\n\r\n                        <input\r\n                            type=\"time\"\r\n                            value={this.state.time}\r\n                            name=\"time\"\r\n                            className=\"date_time\"\r\n                            onChange={this.handleInputChange} />\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"purchase_sidebar_input\">\r\n                        <div className=\"input_label\">\r\n                            Client Name\r\n                        </div>\r\n                        <div className=\"purchase_input_box\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"person\"\r\n                                value={this.state.person}\r\n                                className=\"input_element\"\r\n\r\n                                placeholder=\"Ex- Ramesh\"\r\n                                onChange={this.handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"purchase_sidebar_input\">\r\n                        <div className=\"input_label\">\r\n                            Enter Product\r\n                        </div>\r\n                        <div className=\"purchase_input_box\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.product_name}\r\n                                name=\"product_name\"\r\n                                className=\"input_element\"\r\n\r\n                                onChange={this.handleInputChange} placeholder=\"Ex- Pizza\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"purchase_sidebar_price\">\r\n                        <div className=\"price\">\r\n                            <div className=\"input_label\">\r\n                                Price\r\n                            </div>\r\n                            <div className=\"purchase_input_box\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.price}\r\n                                    name=\"price\"\r\n                                    className=\"input_element\"\r\n\r\n                                    onChange={this.handleInputChange} />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"price\">\r\n                            <div className=\"input_label\">\r\n                                Price Unit\r\n                            </div>\r\n                            <div className=\"price_unit\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    name=\"unit\"\r\n                                    value={this.state.unit}\r\n                                    onChange={this.handleInputChange}\r\n                                    style={{ width: \"100px\" }}\r\n                                    placeholder=\"1\" />\r\n                                <div className=\"unit_button\">\r\n                                    <select onChange={(e) => this.setState({ unit_size: e.target.value })} style={{ background: \"none\", border: \"none\" }} name=\"unit\" id=\"1\">\r\n                                        <option value=\"Peice\">Peice</option>\r\n                                        <option value=\"KG\">KG</option>\r\n                                        <option value=\"Gram\">Gram</option>\r\n                                        <option value=\"ML\">ML</option>\r\n                                        <option value=\"Liter\">Liter</option>\r\n                                        <option value=\"MM\">MM</option>\r\n                                        <option value=\"Inch\">Inch</option>\r\n                                        <option value=\"Feet\">Feet</option>\r\n                                        <option value=\"Meter\">Meter</option>\r\n                                        <option value=\"Sq.Ft.\">Sq.Ft.</option>\r\n                                        <option value=\"Sq.Meter\">Sq.Meter</option>\r\n                                        <option value=\"KM\">KM</option>\r\n                                        <option value=\"CM\">CM</option>\r\n                                        <option value=\"Sq.Inch\">Sq.Inch</option>\r\n                                        <option value=\"Minute\">Minute</option>\r\n                                        <option value=\"Hour\">Hour</option>\r\n                                        <option value=\"Day\">Day</option>\r\n                                        <option value=\"Month\">Month</option>\r\n                                        <option value=\"Year\">Year</option>\r\n                                        <option value=\"Set\">Set</option>\r\n                                        <option value=\"Service\">Service</option>\r\n                                        <option value=\"Work\">Work</option>\r\n                                        <option value=\"Packet\">Packet</option>\r\n                                        <option value=\"Pound\">Pound</option>\r\n                                        <option value=\"Dozen\">Dozen</option>\r\n                                        <option value=\"Pair\">Pair</option>\r\n                                        <option value=\"Quintal\">Quintal</option>\r\n                                        <option value=\"Ton\">Ton</option>\r\n                                        <option value=\"Plate\">Plate</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"purchase_sidebarPrice\">\r\n                        <div className=\"input_label\">\r\n                            Total Quantity\r\n                        </div>\r\n                        <div className=\"second_section\">\r\n                            <input\r\n                                type=\"number\"\r\n                                value={this.state.quantity}\r\n                                name=\"quantity\"\r\n                                className=\"input_element price\"\r\n\r\n                                onChange={this.handleInputChange}\r\n                                style={{ padding: \"0px 10px\" }}\r\n                                placeholder=\"1\" />\r\n\r\n                            <div className=\"total_second\" >\r\n                                <p>Total Amount</p>\r\n                                <div>$ {this.state.total_amount}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"purchase_sidebarPrice\">\r\n                        <div className=\"input_label\">\r\n                            Cash\r\n                        </div>\r\n                        <div className=\"second_section\">\r\n                            <input\r\n                                // type=\"number\"\r\n                                value={this.state.cash}\r\n                                name=\"cash\"\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                className=\"input_element price\"\r\n                                style={{ padding: \"0px 10px\" }}\r\n                                placeholder=\"1\" />\r\n                            <div className=\"total_second\" >\r\n\r\n                                <p>Credit</p>\r\n                                <div>$ {this.state.credit}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"sidebar_footer\" style={{ position: \"absolute\", bottom: \"15px    \" }}>\r\n                    <div className=\"footer_button\" onClick={this.handleClick}>\r\n                        {\r\n                            this.props.isEdit ? \"Update\" : \"Save\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        activeId: state.data.activeId\r\n    }\r\n}\r\nconst mapDispatcToProps = (dispatch) => {\r\n    return {\r\n        savePurchase: (data, id, edit, recentBookId) => dispatch(save_purchase_record(data, id, edit, recentBookId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatcToProps)(AddNewPurchase);","import React, { Component } from 'react'\r\nimport \"../AddNewPurchase/AddNewPurchase.scss\"\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport { connect } from \"react-redux\";\r\nimport { save_purchase_record } from \"../../../store/actions/dataAction\";\r\n\r\nlet newDate = new Date()\r\nlet date = newDate.getDate();\r\nlet month = newDate.getMonth() + 1;\r\nlet year = newDate.getFullYear();\r\n\r\nclass AddNewSale extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            person: this.props.isEdit && this.props.data != null ? this.props.data.person : \"\",\r\n            product_name: this.props.isEdit && this.props.data != null ? this.props.data.product_name : \"\",\r\n            price: this.props.isEdit && this.props.data != null ? this.props.data.price : \"\",\r\n            unit_size: this.props.isEdit && this.props.data != null ? this.props.data.unit_size : \"KG\",\r\n            unit: this.props.isEdit && this.props.data != null ? this.props.data.unit : \"1\",\r\n            quantity: this.props.isEdit && this.props.data != null ? this.props.data.quantity : 0,\r\n            cash: this.props.isEdit && this.props.data != null ? this.props.data.cash : 0,\r\n            date: this.props.isEdit && this.props.data != null ? this.props.data.date : `${year}-${month < 10 ? `0${month}` : `${month}`}-${date < 10 ? `0${date}` : `${date}`}`,\r\n            time: this.props.isEdit && this.props.data != null ? this.props.data.time : newDate.getHours() + \":\" + newDate.getMinutes(),\r\n            credit: this.props.isEdit && this.props.data != null ? this.props.data.credit : 0,\r\n            purchase: this.props.isEdit && this.props.data != null ? this.props.data.purchase : 0,\r\n            total_amount: this.props.isEdit && this.props.data != null ? this.props.data.quantity * this.props.data.price : 0,\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        let type = e.target.name;\r\n\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        }, () => {\r\n            if (type === \"quantity\" || type === \"price\") {\r\n\r\n                this.setState({\r\n                    total_amount: this.state.price * this.state.quantity,\r\n\r\n                })\r\n            }\r\n            if (type === \"cash\") {\r\n                this.setState({\r\n                    credit: this.state.total_amount - this.state.cash\r\n                })\r\n            }\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    handleClick = () => {\r\n        let data = {\r\n            person: [this.state.person],\r\n            product_name: [this.state.product_name],\r\n            price: [this.state.price.toString()],\r\n            unit_size: [this.state.unit_size.toString()],\r\n            unit: [this.state.unit.toString()],\r\n            qantity: [this.state.quantity.toString()],\r\n            cash: [this.state.cash.toString()],\r\n            date: [this.state.date.toString()],\r\n            time: [this.state.time.toString()],\r\n            credit: [this.state.credit.toString()],\r\n            purchase: [this.state.purchase.toString()],\r\n            offline_id: [parseInt(Math.random() * 10000000000000)],\r\n            sell: [\"sell\"]\r\n        }\r\n        let edit_data = {\r\n            s_id: this.props.data.s_id,\r\n            person: this.state.person,\r\n            product_name: this.state.product_name,\r\n            price: this.state.price.toString(),\r\n            unit_size: this.state.unit_size.toString(),\r\n            unit: this.state.unit.toString(),\r\n            quantity: this.state.quantity.toString(),\r\n            cash: this.state.cash.toString(),\r\n            date: this.state.date.toString(),\r\n            time: this.state.time.toString(),\r\n            credit: this.state.credit.toString(),\r\n            purchase: this.state.purchase.toString(),\r\n            offline_id: this.props.data.offline_id,\r\n            sell: \"sell\",\r\n\r\n        }\r\n        this.props.savePurchase(this.props.isEdit ? edit_data : data, this.props.data.offline_id, this.props.isEdit, this.props.activeid);\r\n        this.props.onClose(\"right\", false);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"purchase_sidebar\">\r\n                <div className=\"purchase_sidebar_header\">\r\n                    <div className=\"purchase_title\">\r\n                        <BsArrowLeft className=\"icon\" onClick={this.props.onClose} />\r\n\r\n                        <div style={{ marginLeft: \"10px\" }}>{this.props.isEdit ? \"Update Sell\" : \"Add New Sale\"}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"purchase_sidebar_form\">\r\n                    <div className=\"purchase_sidebar_date_time\">\r\n\r\n                        <input\r\n                            type=\"date\"\r\n                            value={this.state.date}\r\n                            name=\"date\"\r\n                            className=\"date_time\"\r\n                            onChange={this.handleInputChange} />\r\n\r\n                        <input\r\n                            type=\"time\"\r\n                            value={this.state.time}\r\n                            name=\"time\"\r\n                            className=\"date_time\"\r\n                            onChange={this.handleInputChange} />\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"purchase_sidebar_input\">\r\n                        <div className=\"input_label\">\r\n                            Client Name\r\n                        </div>\r\n                        <div className=\"purchase_input_box\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"person\"\r\n                                value={this.state.person}\r\n                                className=\"input_element\"\r\n\r\n                                placeholder=\"Ex- Ramesh\"\r\n                                onChange={this.handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"purchase_sidebar_input\">\r\n                        <div className=\"input_label\">\r\n                            Enter Product\r\n                        </div>\r\n                        <div className=\"purchase_input_box\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.product_name}\r\n                                name=\"product_name\"\r\n                                className=\"input_element\"\r\n\r\n                                onChange={this.handleInputChange} placeholder=\"Ex- Pizza\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"purchase_sidebar_price\">\r\n                        <div className=\"price\">\r\n                            <div className=\"input_label\">\r\n                                Price\r\n                            </div>\r\n                            <div className=\"purchase_input_box\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.price}\r\n                                    name=\"price\"\r\n                                    className=\"input_element\"\r\n\r\n                                    onChange={this.handleInputChange} />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"price\">\r\n                            <div className=\"input_label\">\r\n                                Price Unit\r\n                            </div>\r\n                            <div className=\"price_unit\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"unit\"\r\n                                    value={this.state.unit}\r\n                                    onChange={this.handleInputChange}\r\n                                    style={{ width: \"100px\" }}\r\n                                    placeholder=\"1\" />\r\n                                <div className=\"unit_button\">\r\n                                    <select onChange={(e) => this.setState({ unit_size: e.target.value })} style={{ background: \"none\", border: \"none\" }} name=\"unit\" id=\"1\">\r\n                                        <option value=\"Peice\">Peice</option>\r\n                                        <option value=\"KG\">KG</option>\r\n                                        <option value=\"Gram\">Gram</option>\r\n                                        <option value=\"ML\">ML</option>\r\n                                        <option value=\"Liter\">Liter</option>\r\n                                        <option value=\"MM\">MM</option>\r\n                                        <option value=\"Inch\">Inch</option>\r\n                                        <option value=\"Feet\">Feet</option>\r\n                                        <option value=\"Meter\">Meter</option>\r\n                                        <option value=\"Sq.Ft.\">Sq.Ft.</option>\r\n                                        <option value=\"Sq.Meter\">Sq.Meter</option>\r\n                                        <option value=\"KM\">KM</option>\r\n                                        <option value=\"CM\">CM</option>\r\n                                        <option value=\"Sq.Inch\">Sq.Inch</option>\r\n                                        <option value=\"Minute\">Minute</option>\r\n                                        <option value=\"Hour\">Hour</option>\r\n                                        <option value=\"Day\">Day</option>\r\n                                        <option value=\"Month\">Month</option>\r\n                                        <option value=\"Year\">Year</option>\r\n                                        <option value=\"Set\">Set</option>\r\n                                        <option value=\"Service\">Service</option>\r\n                                        <option value=\"Work\">Work</option>\r\n                                        <option value=\"Packet\">Packet</option>\r\n                                        <option value=\"Pound\">Pound</option>\r\n                                        <option value=\"Dozen\">Dozen</option>\r\n                                        <option value=\"Pair\">Pair</option>\r\n                                        <option value=\"Quintal\">Quintal</option>\r\n                                        <option value=\"Ton\">Ton</option>\r\n                                        <option value=\"Plate\">Plate</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"purchase_sidebarPrice\">\r\n                        <div className=\"input_label\">\r\n                            Total Quantity\r\n                        </div>\r\n                        <div className=\"second_section\">\r\n                            <input\r\n                                type=\"number\"\r\n                                value={this.state.quantity}\r\n                                name=\"quantity\"\r\n                                className=\"input_element price\"\r\n\r\n                                onChange={this.handleInputChange}\r\n                                style={{ padding: \"0px 10px\" }}\r\n                                placeholder=\"1\" />\r\n\r\n                            <div className=\"total_second\" >\r\n                                <p>Total Amount</p>\r\n                                <div>$ {this.state.total_amount}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"purchase_sidebarPrice\">\r\n                        <div className=\"input_label\">\r\n                            Cash\r\n                        </div>\r\n                        <div className=\"second_section\">\r\n                            <input\r\n                                // type=\"number\"\r\n                                value={this.state.cash}\r\n                                name=\"cash\"\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                className=\"input_element price\"\r\n                                style={{ padding: \"0px 10px\" }}\r\n                                placeholder=\"1\" />\r\n                            <div className=\"total_second\" >\r\n\r\n                                <p>Credit</p>\r\n                                <div>$ {this.state.credit}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"sidebar_footer\" style={{ position: \"absolute\", bottom: \"15px    \" }}>\r\n                    <div className=\"footer_button\" onClick={this.handleClick}>\r\n                        {\r\n                            this.props.isEdit ? \"Update\" : \"Save\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeid: state.data.activeId\r\n    }\r\n}\r\nconst mapDispatcToProps = (dispatch) => {\r\n    return {\r\n        savePurchase: (data, id, edit, recentBookId) => dispatch(save_purchase_record(data, id, edit, recentBookId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatcToProps)(AddNewSale);","import React, { Component } from 'react'\r\nimport \"./CreateNoteBook.scss\"\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport { connect } from \"react-redux\";\r\nimport { add_book } from \"../../../store/actions/bookAction\";\r\n\r\n\r\nclass CreateNoteBook extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookName: null,\r\n\r\n        }\r\n    }\r\n    userID = \"108sLjKgFLRKWXEXvIGNLAYOUku1\";\r\n\r\n    handleInputChnage = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n    handleClick = () => {\r\n        this.props.addBook(this.state.bookName);\r\n        this.props.onClose(\"right\", false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar_createBook\">\r\n                <div className=\"createBook_header\">\r\n                    <BsArrowLeft onClick={this.props.onClose} className=\"icon\" />\r\n                    <p>Create Note Book</p>\r\n                </div>\r\n\r\n                <div className=\"createBook_body\">\r\n                    <p>New Book</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"bookName\"\r\n                        value={this.state.bookName}\r\n                        onChange={(e) => this.handleInputChnage(e)}\r\n                        className=\"createBook_input\"\r\n                        placeholder=\"Enter name here\" />\r\n\r\n                </div>\r\n                <div className=\"side_footer\">\r\n\r\n                    <div className=\"side_button\" onClick={this.handleClick}>Save</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatwToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addBook: (name) => dispatch(add_book(name))\r\n    }\r\n}\r\nexport default connect(mapStatwToProps, mapDispatchToProps)(CreateNoteBook);\r\n\r\n   //  [bookName,setBookName] = useState(\"\");\r\n    // const date = new Date()\r\n    // const crtDate = date.getDate()+\"/\"+date.getMonth()+\"/\"+date.getFullYear();\r\n    // const crtTime = date.getHours()+\":\"+date.getMinutes();\r\n    // const d = {\r\n    //     \"book_id\":123456,\r\n    //     \"date\":crtDate,\r\n    //     \"time\":crtTime,\r\n    //     \"offline_id\":\"123456\"\r\n    // }\r\n\r\n    // axios.post(`http://ec2-18-191-151-100.us-east-2.compute.amazonaws.com/sellregister/savebook/${userID}`,\r\n    // d).then((res)=>{console.log(res)}).catch((err)=>{console.log(err)})","import React, { useState } from 'react';\r\n\r\nconst Accordion = ({ title, content }) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  return (\r\n    <div style={{ cursor: \"pointer\" }} className=\"accordion\" onClick={() => setIsActive(!isActive)}>\r\n\r\n      <div>{title}</div>\r\n      {/* <div>{isActive ? '-' : '+'}</div> */}\r\n\r\n      {isActive && <div className=\"accordion-content\">{content}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Accordion;","import React from 'react'\r\nimport \"./Help.scss\"\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport Accordion from \"../Accordion\"\r\n\r\nfunction Help({ onClose }) {\r\n  const accordionData = [\r\n    {\r\n      title: \"What is Bookkeeping?\",\r\n      content: `Bookkeeping is a simple accounting app for small businesses. It helps you to track all of your Sale, Purchase, Cash, Credit details.`,\r\n      titleHindi: \"बहीखाता क्या है?\",\r\n      contentHindi: \"बहीखाता छोटे व्यवसायों के लिए एक सरल हिसाब ऐप है। यह आपको अपने सभी बिक्री, खरीद, नगद, उधार विवरणों का हिसाब करने में मदद करता है।\"\r\n\r\n    },\r\n    {\r\n      title: \"What is a Sale/Purchase entry?\",\r\n      content: `Sale Entry - When you sale something, record it into a sale entry.\r\n      Purchase Entry - When you purchase something, record it into a purchase entry.\r\n      `,\r\n      titleHindi: \"सेल/परचेस एंट्री क्या है?\",\r\n      contentHindi: <ol>\r\n        <li>सेल एंट्री - जब आप कुछ बेचते हैं, तो इसे सेल एंट्री में दर्ज करें।</li>\r\n        <li>परचेस एंट्री - जब आप कुछ खरीदते हैं, तो इसे परचेस एंट्री में दर्ज करें।</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to add a new entry?\",\r\n      content: <ol>\r\n        <li>Select the “Sale” or “Purchase” button on the Home page.</li>\r\n        <li>Enter Price, Price unit, Select the Unit, Quantity</li>\r\n        <li>Total Amount = Price * Quantity</li>\r\n        <li>Enter Cash</li>\r\n        <li>Credit = Total Amount - Cash</li>\r\n        <li>Tap on “Save” to save the entry</li>\r\n      </ol>,\r\n      titleHindi: \"नई एंट्री कैसे जोड़ें?\",\r\n      contentHindi: <ol>\r\n        <li>होम पेज पर \"Sale\" या \"Purchase\" बटन का चयन करें।</li>\r\n        <li>प्राइस, प्राइस यूनिट, मात्रा दर्ज करें, प्राइस की यूनिट का चयन करें</li>\r\n        <li>कुल राशि = मूल्य * मात्रा</li>\r\n        <li>कैश(नगद) डालें</li>\r\n        <li>क्रेडिट(उधार) = कुल राशि - नकद</li>\r\n        <li>एंट्री को बचाने के लिए \"Save\" बटन दबाएँ</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to edit the added entry?\",\r\n      content: <ol>\r\n        <li>Tap on the entry you want to edit from Home</li>\r\n        <li>Make the changes you want to and tap on “Save” to save changes</li>\r\n      </ol>,\r\n      titleHindi: \"पहले से जुड़ी हुई एंट्री में बदलाव कैसे करें?\",\r\n      contentHindi: <ol>\r\n        <li>आप होम पेज पर उस एंट्री को दबाएँ जिसमे बदलाव करना चाहते हैं</li>\r\n        <li>आप जिन परिवर्तनों को चाहते हैं, उन्हें करें और परिवर्तनों को सेव करने के लिए \"Save\" बटन दबाएँ</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to delete the added entry?\",\r\n      content: <ol>\r\n        <li>Tap on the entry you want to edit from Home page</li>\r\n        <li>Tap on the bin icon in the top right corner of the page</li>\r\n      </ol>,\r\n      titleHindi: \"पहले से जुड़ी हुई एंट्री कैसे हटाएँ?\",\r\n      contentHindi: <ol>\r\n        <li>आप होम पेज पर उस एंट्री को दबाएँ जिसे हटाना चाहते हैं</li>\r\n        <li>पेज के ऊपरी दाएं कोने में डस्टबिन बटन दबाएँ</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to see only today's entries?\",\r\n      content: <ol>\r\n        <li>Tap on filter icon (add filter icon here) in the top right corner of Home </li>\r\n        <li>Select “Today” in the date range</li>\r\n        <li>Tap on “Apply Filter”</li>\r\n      </ol>,\r\n      titleHindi: \"केवल आज की एंट्री को कैसे देखें?\",\r\n      contentHindi: <ol>\r\n        <li>होम पेज के ऊपरी दाएं कोने में फ़िल्टर आइकन को दबाएँ</li>\r\n        <li>दिनांक  में \"Today\" चुनें</li>\r\n        <li>\"Apply Filter\" बटन दबाएँ</li>\r\n      </ol>\r\n    }, {\r\n      title: \"How to see only this week's entries?\",\r\n      content: <ol>\r\n        <li>Tap on filter icon (add filter icon here) in the top right corner of Home </li>\r\n        <li>Select “This Week” in the date range</li>\r\n        <li>Tap on “Apply Filter”</li>\r\n      </ol>,\r\n      titleHindi: \"केवल इस सप्ताह की एंट्री को कैसे देखें?\",\r\n      contentHindi: <ol>\r\n        <li>होम पेज के ऊपरी दाएं कोने में फ़िल्टर आइकन को दबाएँ</li>\r\n        <li>दिनांक  में \"This Week\" चुनें</li>\r\n        <li>\"Apply Filter \" बटन दबाएँ</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to see only this month's entries?\",\r\n      content: <ol>\r\n        <li>Tap on filter icon (add filter icon here) in the top right corner of Home </li>\r\n        <li>Select “This month” in the date range</li>\r\n        <li>Tap on “Apply Filter”</li>\r\n      </ol>,\r\n      titleHindi: \"केवल इस महीने की एंट्री को कैसे देखें?\",\r\n      contentHindi: <ol>\r\n        <li>होम पेज के ऊपरी दाएं कोने में फ़िल्टर आइकन को दबाएँ</li>\r\n        <li>दिनांक  में \"This Month\" चुनें</li>\r\n        <li>\"Apply Filter \" बटन दबाएँ</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to search any product name or client name?\",\r\n      content: <ol>\r\n        <li>Tap on the search bar in the top of the Home </li>\r\n        <li>Enter the product or client name you want to search in the search bar</li>\r\n        <li>You see all the related entries on Home</li>\r\n      </ol>,\r\n      titleHindi: \"किसी भी उत्पाद का नाम या ग्राहक का नाम कैसे खोजें?\",\r\n      contentHindi: <ol>\r\n        <li>होम के शीर्ष में सर्च बार पर दबाएँ</li>\r\n        <li>वहाँ उस उत्पाद या ग्राहक नाम डालें जिसे आप सर्च बार में खोजना चाहते हैं</li>\r\n        <li>आप सभी संबंधित एंट्री होम पर देख सकते हैं</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to see only all cash entries?\",\r\n      content: <ol>\r\n        <li>Tap on the \"Cash\" button Home. Now, all the entries on the Home page are cash entries.</li>\r\n\r\n      </ol>,\r\n      titleHindi: \"केवल सभी नकद एंट्री को कैसे देखें?\",\r\n      contentHindi: \"होम पेज पर Cash बटन को दबाएँ। अब, होम पेज पर सभी एंट्री नकद एंट्री हैं।\"\r\n    },\r\n    {\r\n      title: \"How to see only all credit entries?\",\r\n      content: <ol>\r\n        <li>Tap on the \"Credit\" button Home. Now, all the entries on the Home page are credit entries.</li>\r\n\r\n      </ol>,\r\n      titleHindi: \"केवल उधार की एंट्री को कैसे देखें?\",\r\n      contentHindi: \"होम पेज पर Credit  बटन को दबाएँ। अब, होम पेज पर सभी एंट्री उधार एंट्री हैं।\"\r\n    },\r\n    {\r\n      title: \"How to add cash entries?\",\r\n      content: <ol>\r\n        <li>Select the “Sale” or “Purchase” button on the Home page.</li>\r\n        <li>Enter Cash amount in Cash</li>\r\n        <li>Tap on “Save” to save the entry</li>\r\n      </ol>,\r\n      titleHindi: \"कैश एंट्री कैसे जोड़ें?\",\r\n      contentHindi: <ol>\r\n        <li>होम पेज पर \"Sale \" या \"Purchase\" बटन का चयन करें।</li>\r\n        <li>\"Cash\" में नकद राशि दर्ज करें</li>\r\n        <li>एंट्री को बचाने के लिए \"Save\"  बटन दबाएँ\r\n        </li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"What is Total Sale / Total Purchase?\",\r\n      content: <ol>\r\n        <li>Total Sale is the sum of Total Amount of all the added Sale entries.</li>\r\n        <li>Total Purchase is the sum of Total Amount of all the added Purchase entries.</li>\r\n\r\n      </ol>,\r\n      titleHindi: \"Total Sale/Total Purchase क्या है?\",\r\n      contentHindi: <ol>\r\n        <li>Total Sale(कुल बिक्री) सभी जोड़ी गई बिक्री एंट्री की कुल राशि का योग है।</li>\r\n        <li>Total Purchase(कुल खरीद) सभी जोड़े गए खरीद एंट्री की कुल राशि का योग है।</li>\r\n      </ol>\r\n\r\n    },\r\n    {\r\n      title: \"How to add credit in an entry?\",\r\n      content: <ol>\r\n        <li>Select the “Sale” or “Purchase” button on the Home page.</li>\r\n        <li>Enter the Price of the product</li>\r\n        <li>Enter the total Quantity. Now you get the Total Amount, Total Amount = Price * Quantity.</li>\r\n        <li>Enter the Cash amount in Cash. Now you get the Credit, Credit = Total Amount - Cash.</li>\r\n        <li>Tap on “Save” to save the entry</li>\r\n      </ol>,\r\n      titleHindi: \"एंट्री में क्रेडिट कैसे जोड़ें?\",\r\n      \"contentHindi\": <ol>\r\n        <li>होम पेज  पर \"Sale\" या \"Purchase\" बटन का चयन करें।</li>\r\n        <li>उत्पाद की Price(कीमत) दर्ज करें</li>\r\n        <li>Quantity(कुल मात्रा) दर्ज करें। अब आपको कुल राशि(कुल राशि = कीमत * मात्रा) मिलती है।</li>\r\n        <li>\"Cash\" में नकद राशि दर्ज करें। अब आपको क्रेडिट(क्रेडिट = कुल राशि - नकद) मिलती है।</li>\r\n        <li>एंट्री को सेव करने के लिए \"Save\" बटन दबाएँ</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to add a new book?\",\r\n      content: <ol>\r\n        <li>Tap on the book name on top left of Home page.</li>\r\n        <li>Tap on \"Create New Book\" button</li>\r\n        <li>Enter the name for the new book</li>\r\n        <li>Tap on \"Create\" button</li>\r\n      </ol>,\r\n      titleHindi: \"नई बुक कैसे जोड़ें?\",\r\n      contentHindi: <ol>\r\n        <li>होम पेज के शीर्ष बाईं ओर बुक के नाम पर टैप करें</li>\r\n        <li>\"Create New Book\" बटन को दबाएँ</li>\r\n        <li>नई बुक के लिए नाम डालें</li>\r\n        <li>\"Create\" बटन को दबाएँ</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to share the entry receipt?\",\r\n      content: <ol>\r\n        <li>Tap on the added entry on Home</li>\r\n        <li>Tap on 'Receipt\" button on top right of the page</li>\r\n        <li>Tap on \"Share\" button in bottom right of the page</li>\r\n      </ol>,\r\n      titleHindi: \"एंट्री रसीद कैसे शेयर करें?\",\r\n      contentHindi: <ol>\r\n        <li>होम पेज पर जोड़े गए एंट्री को दबाएँ</li>\r\n        <li>पेज के शीर्ष दाईं ओर स्थित 'Receipt' बटन को दबाएँ</li>\r\n        <li>पेज के नीचे दाईं ओर \"Share\" बटन को दबाएँ</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to generate the pdf report?\",\r\n      content: <ol>\r\n        <li>Tap on the pdf icon in top action bar on Home.</li>\r\n        <li>Tap on \"Download\" button</li>\r\n\r\n      </ol>,\r\n      titleHindi: \"पीडीएफ रिपोर्ट कैसे बनायें?\",\r\n      contentHindi: <ol>\r\n        <li>होम पेज में सबसे ऊपर में \"PDF\" बटन को दबाएँ</li>\r\n        <li>\"Download\" बटन को दबाएँ</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to generate the pdf report for any one client?\",\r\n      content: <ol>\r\n        <li>Tap on Search bar</li>\r\n        <li>Enter the client name in Search bar</li>\r\n        <li>Tap on the pdf icon in top action bar on Home</li>\r\n        <li>Tap on \"Download\" button</li>\r\n      </ol>,\r\n      titleHindi: \"किसी एक ग्राहक के लिए pdf रिपोर्ट कैसे बनायें?\",\r\n      contentHindi: <ol>\r\n        <li>सर्च बार को दबाएँ</li>\r\n        <li>सर्च बार में ग्राहक का नाम दर्ज करें</li>\r\n        <li>होम पेज में सबसे ऊपर में \"PDF\" बटन को दबाएँ</li>\r\n        <li>\"Download\" बटन को दबाएँ</li>\r\n      </ol>\r\n    },\r\n    {\r\n      title: \"How to generate the pdf report for any one product?\",\r\n      content: <ol>\r\n        <li>Tap on Search bar</li>\r\n        <li>Enter the product name in Search bar</li>\r\n        <li>Tap on the pdf icon in top action bar on Home</li>\r\n      </ol>,\r\n      titleHindi: \"किसी एक उत्पाद के लिए pdf रिपोर्ट कैसे बनायें?\",\r\n      contentHindi: <ol>\r\n        <li>सर्च बार को दबाएँ</li>\r\n        <li>सर्च बार में उत्पाद का नाम दर्ज करें</li>\r\n        <li>होम पेज में सबसे ऊपर में \"PDF\" बटन को दबाएँ</li>\r\n      </ol>\r\n    }, {\r\n      title: \"How to generate the pdf report for any particular date period?\",\r\n      content: <ol>\r\n        <li>Tap on filter icon(add filter icon here) in the top right corner of Home </li>\r\n        <li>Select the date range</li>\r\n        <li>Tap on “Apply Filter”</li>\r\n        <li>Tap on the pdf icon in top action bar on Home</li>\r\n        <li>Tap on \"Download\" button</li>\r\n      </ol>,\r\n      titleHindi: \"किसी विशेष तिथि अवधि के लिए पीडीएफ रिपोर्ट कैसे बनायें\",\r\n      contentHindi: <ol>\r\n        <li>होम के ऊपरी दाएं कोने में फ़िल्टर बटन को दबाएँ</li>\r\n        <li>तिथि का चयन करें</li>\r\n        <li>\"Apply This FIlter\" बटन को दबाएँ</li>\r\n        <li>होम पेज में सबसे ऊपर में \"PDF\" बटन को दबाएँ</li>\r\n        <li>\"Download\" बटन को दबाएँ</li>\r\n      </ol>\r\n    }\r\n\r\n  ];\r\n  const [lang, setLang] = React.useState(\"English\");\r\n\r\n\r\n  return (\r\n    <div className=\"help_sidebar\">\r\n      <div className=\"help_header\">\r\n        <BsArrowLeft className=\"icon\" onClick={onClose} />\r\n        <div className=\"title\">Help</div>\r\n      </div>\r\n      <div className=\"questions_content\">\r\n        <div className=\"languages\">\r\n          <button onClick={() => setLang(\"English\")} className=\"lang_option\" style={{ backgroundColor: lang === \"English\" ? \"rgba(113, 90, 255, 1)\" : \"white\", color: lang === \"English\" ? \"white\" : \"black\" }}>English</button>\r\n          <button onClick={() => setLang(\"Hindi\")} className=\"lang_option\" style={{ backgroundColor: lang === \"Hindi\" ? \"rgba(113, 90, 255, 1)\" : \"white\", color: lang === \"Hindi\" ? \"white\" : \"black\" }}>Hindi</button>\r\n\r\n        </div>\r\n\r\n        <div className=\"question_list\">\r\n\r\n\r\n\r\n          {accordionData.map(({ title, content, titleHindi, contentHindi }) => (\r\n            <Accordion title={lang == \"Hindi\" ? titleHindi : title} content={lang == \"Hindi\" ? contentHindi : content} />\r\n          ))}\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"side_footer\">\r\n        <div className=\"question\">\r\n          Have any other questions?\r\n        </div>\r\n        <button onClick={() => window.location.href = \"whatsapp://send?text=Hii!&phone=+919981278197\"} className=\"side_button\">Chat with us</button>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Help\r\n","import React, { Component } from 'react'\r\nimport { MdEdit, MdMessage, MdDone } from \"react-icons/md\";\r\nimport { BsArrowLeft, BsFillPersonFill } from \"react-icons/bs\";\r\nimport { BiPhone, BiShareAlt } from \"react-icons/bi\"\r\nimport { HiShoppingBag, HiShieldCheck } from \"react-icons/hi\"\r\nimport { IoIosCloudDone } from \"react-icons/io\"\r\nimport { connect } from \"react-redux\";\r\nimport \"./Settings.scss\"\r\nimport { update_user } from \"../../../store/actions/userAction\";\r\nimport \"../../../../node_modules/react-country-flag-currency-picker/css/react-flags-select.css\"\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nclass Settings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isNameOpen: false,\r\n            isBNOpen: false,\r\n            isMNOpen: false,\r\n            isCOpen: false,\r\n            name: this.props.user.user_name,\r\n            bName: this.props.user.business_name,\r\n            mobile: this.props.user.phone_no,\r\n            currency: this.props.user.currency\r\n        }\r\n    }\r\n    handleEdit = (type, val) => {\r\n        if (val === true) {\r\n            this.setState({\r\n                [type]: val,\r\n                isNameOpen: type !== \"isNameOpen\" ? !val : val,\r\n                isBNOpen: type !== \"isBNOpen\" ? !val : val,\r\n                isMNOpen: type !== \"isMNOpen\" ? !val : val,\r\n                isCOpen: type !== \"isCOpen\" ? !val : val\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n\r\n        })\r\n    }\r\n\r\n    handleSubmit = (key, value) => {\r\n        this.props.update(key, value, this.props.user);\r\n        this.props.onClose(\"right\", false)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar_settings\">\r\n                <div className=\"settings_header\">\r\n                    <BsArrowLeft className=\"icon\" onClick={this.props.onClose} />\r\n\r\n                    <p>Settings</p>\r\n                </div>\r\n\r\n                <div className=\"text\">\r\n                    Your Information\r\n                </div>\r\n\r\n                <div className=\"settings_info\">\r\n                    <div className=\"info\">\r\n                        <BsFillPersonFill className=\"icon_left\" />\r\n                        <div className=\"input_section\">\r\n                            <p>Full Name</p>\r\n                            {\r\n                                this.state.isNameOpen ? (\r\n                                    <input\r\n                                        className=\"input_field\"\r\n                                        name=\"name\"\r\n                                        value={this.state.name}\r\n                                        placeholder=\"Your Name\"\r\n                                        onChange={this.handleInputChange}\r\n                                        type=\"text\" />\r\n                                ) : (\r\n                                    this.props.user ? (\r\n                                        <p className=\"second\">{this.props.user.user_name == null ? \"Your Name\" : this.props.user.user_name}</p>\r\n                                    ) : null\r\n\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                        {\r\n                            this.state.isNameOpen ? (\r\n                                <MdDone onClick={() => this.handleSubmit(\"user_name\", this.state.name)} className=\"icon_right\" />\r\n                            ) : (\r\n                                <MdEdit onClick={() => this.handleEdit('isNameOpen', !this.state.isNameOpen)} className=\"icon_right\" />\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <HiShoppingBag className=\"icon_left\" />\r\n                        <div className=\"input_section\">\r\n                            <p>business Name</p>\r\n                            {\r\n                                this.state.isBNOpen ? (\r\n                                    <input\r\n                                        className=\"input_field\"\r\n                                        name=\"bName\"\r\n                                        value={this.state.bName}\r\n                                        placeholder=\"Your businessName\"\r\n                                        onChange={this.handleInputChange}\r\n                                        type=\"text\" />\r\n                                ) : (\r\n                                    this.props.user ? (\r\n                                        <p className=\"second\">{this.props.user.business_name == null ? \"Your Business Name\" : this.props.user.business_name}</p>\r\n                                    ) : null\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                        {\r\n                            this.state.isBNOpen ? (\r\n                                <MdDone onClick={() => this.handleSubmit(\"business_name\", this.state.bName)} className=\"icon_right\" />\r\n                            ) : (\r\n                                <MdEdit onClick={() => this.handleEdit('isBNOpen', !this.state.isBNOpen)} className=\"icon_right\" />\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <BiPhone className=\"icon_left\" />\r\n                        <div className=\"input_section\">\r\n                            <p>Mobile Number</p>\r\n                            {\r\n                                this.state.isMNOpen ? (\r\n                                    <input\r\n                                        className=\"input_field\"\r\n                                        name=\"mobile\"\r\n                                        value={this.state.mobile}\r\n                                        placeholder=\"Your Mobile Number\"\r\n                                        onChange={this.handleInputChange}\r\n                                        type=\"number\" />\r\n                                ) : (\r\n                                    this.props.user ? (\r\n\r\n                                        <p className=\"second\">{this.props.user.phone_no == null ? \"Your Phone Number\" : this.props.user.phone_no}</p>\r\n\r\n\r\n                                    ) : null\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                        {/* {\r\n                            this.state.isMNOpen ? (\r\n                                <MdDone onClick={() => this.handleSubmit(\"phone_no\", this.state.mobile)} className=\"icon_right\" />\r\n                            ) : (\r\n                                <MdEdit onClick={() => this.handleEdit('isMNOpen', !this.state.isMNOpen)} className=\"icon_right\" />\r\n                            )\r\n                        } */}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div style={{ marginTop: \"30px\" }} className=\"text\">\r\n                    Business Details\r\n                </div>\r\n\r\n                <div className=\"settings_info\">\r\n\r\n                    <div className=\"info\">\r\n                        <BsFillPersonFill className=\"icon_left\" />\r\n                        <div className=\"input_section\">\r\n                            <p>Your currency</p>\r\n                            {\r\n\r\n                                // this.state.isCOpen ? (\r\n                                //     <ReactCountryFlagsCurrencySelect onSelect={(c) => this.handleInputChange({\r\n                                //         target: {\r\n                                //             name: \"currency\",\r\n                                //             value: c.currency\r\n                                //         }\r\n                                //     })} />\r\n                                // ) : (\r\n\r\n                                this.props.user ? (\r\n                                    <Tooltip title=\"please visit our application for currency update\" >\r\n                                        <p style={{ cursor: \"pointer\" }} className=\"second\">{this.props.user.currency == null ? \"Your Currency\" : this.props.user.currency}</p>\r\n                                    </Tooltip>\r\n                                ) : null\r\n                                // )\r\n                            }\r\n\r\n                        </div>\r\n                        {/* {\r\n                            this.state.isCOpen ? (\r\n                                <MdDone onClick={() => this.handleSubmit(\"currency\", this.state.currency)} className=\"icon_right\" />\r\n                            ) : (\r\n                                <MdEdit onClick={() => this.handleEdit('isCOpen', !this.state.isCOpen)} className=\"icon_right\" />\r\n                            )\r\n                        } */}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div style={{ marginTop: \"30px\" }} className=\"text\">\r\n                    Settings\r\n                </div>\r\n\r\n                <div className=\"settings_info\">\r\n                    <div style={{ padding: \"10px\", border: \"none\" }} className=\"info\">\r\n                        <BiShareAlt className=\"icon_left\" />\r\n                        <div className=\"input_section\">\r\n                            <p className=\"second\">Share App</p>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"settings_info\">\r\n                    <div style={{ padding: \"10px\", border: \"none\" }} className=\"info\">\r\n                        <MdMessage className=\"icon_left\" />\r\n                        <div className=\"input_section\">\r\n                            <p style={{ cursor: \"pointer\" }} className=\"second\" onClick={() => window.location.href = \"whatsapp://send?text=Hii!&phone=+919981278197\"}>Send Feedback</p>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {\r\n                    this.props.isAuth ? (\r\n                        <div className=\"settings_info marginTopBot\">\r\n                            <div style={{ padding: \"6px\" }} className=\"info\">\r\n                                <BiShareAlt className=\"icon_left\" />\r\n                                <div className=\"input_section\" onClick={() => localStorage.removeItem(\"id\")}>\r\n                                    <a style={{ textDecoration: \"none\" }} className=\"second\" href=\"/login\">Logout</a>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    ) : null\r\n                }\r\n\r\n                <div className=\"text\">\r\n                    Our Promise\r\n                </div>\r\n\r\n                <div className=\"settings_info \">\r\n                    <div style={{ padding: \"0px\", border: \"none\" }} className=\"info\">\r\n                        <HiShieldCheck style={{ color: \"black\" }} className=\"icon_left\" />\r\n                        <div className=\"input_section\">\r\n                            <p >100% Safe & Free</p>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ padding: \"0px\", border: \"none\" }} className=\"info\">\r\n                        <IoIosCloudDone className=\"icon_left\" />\r\n                        <div className=\"input_section\">\r\n                            <p>100% Auto Data BackUp</p>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user,\r\n        isAuth: state.user.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        update: (key, value, user) => dispatch(update_user(key, value, user)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n\r\n\r\n\r\n","import axios from \"../../utils/axios\";\r\nimport { SET_USER, UPDATE_USER } from \"./actionType\";\r\n\r\n\r\nexport const get_user = () => async dispatch => {\r\n    try {\r\n\r\n        let result = await axios.get(`/getUser/${localStorage.getItem(\"id\")}`);\r\n\r\n        dispatch({ type: SET_USER, payload: result.data })\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\nexport const update_user = (key, value, userD) => async dispatch => {\r\n    try {\r\n\r\n\r\n        let userData = {\r\n            user_name: key !== \"user_name\" ? userD.user_name : value,\r\n            business_name: key !== \"business_name\" ? userD.business_name : value,\r\n            currency: key !== \"currency\" ? userD.currency : value,\r\n            phone_no: key !== \"phone_no\" ? userD.phone_no : value.toString()\r\n\r\n        }\r\n        await axios.put(`/sellregister/updateuser/${localStorage.getItem(\"id\")}`, userData)\r\n        dispatch({ type: UPDATE_USER, payload: userData })\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport \"./updateBook.scss\"\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport { connect } from \"react-redux\";\r\nimport { update_book } from \"../../../store/actions/bookAction\";\r\n\r\n\r\nclass UpdateBook extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookName: null,\r\n\r\n        }\r\n    }\r\n    userID = \"108sLjKgFLRKWXEXvIGNLAYOUku1\";\r\n\r\n    handleInputChnage = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n    handleClick = () => {\r\n        this.props.updateBook(this.state.bookName, this.props.userId, this.props.id);\r\n        this.props.onClose(\"right\", false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar_createBook\">\r\n                <div className=\"createBook_header\">\r\n                    <BsArrowLeft onClick={this.props.onClose} className=\"icon\" />\r\n                    <p>Rename book</p>\r\n                </div>\r\n\r\n                <div className=\"createBook_body\">\r\n                    <p>Enter the new Name</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"bookName\"\r\n                        value={this.state.bookName}\r\n                        onChange={(e) => this.handleInputChnage(e)}\r\n                        className=\"createBook_input\"\r\n                        placeholder=\"Enter name here\" />\r\n\r\n                </div>\r\n                <div className=\"side_footer\">\r\n\r\n                    <div className=\"side_button\" onClick={this.handleClick}>Rename</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatwToProps = (state) => {\r\n    return {\r\n        userId: state.user.user.user_id\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateBook: (name, user, bookId) => dispatch(update_book(name, user, bookId))\r\n    }\r\n}\r\nexport default connect(mapStatwToProps, mapDispatchToProps)(UpdateBook);\r\n","import React, { Component } from 'react'\r\nimport { AiOutlinePlus, AiOutlineMinus } from \"react-icons/ai\"\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AddNewPurchase from './overlays/AddNewPurchase/AddNewPurchase';\r\nimport AddNewsale from './overlays/AddNewSale/AddNewsale';\r\n\r\n\r\nimport CreateNoteBook from './overlays/CreateNewBook/CreateNoteBook';\r\nimport Help from '../components/overlays/Help/Help';\r\nimport Settings from './overlays/Settings/Settings';\r\nimport UpdateBook from \"./overlays/UpdateBook/Updatebook\";\r\n\r\n\r\n\r\nexport default class DrawerSection extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            right: false\r\n        }\r\n    }\r\n    toggleDrawer = (anchor, open) => (event) => {\r\n        if (this.props.compo === \"update_book\")\r\n            this.props.onClick();\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ ...this.state, [anchor]: open });\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment key={'right'}>\r\n                {this.props.compo === \"add_purchase\" ? (<div>\r\n                    <div className=\"purchase_button\" onClick={this.toggleDrawer('right', true)}>\r\n                        <AiOutlineMinus onClose={this.toggleDrawer('right', false)} className=\"button_icons\" style={{ color: \"rgba(200, 2, 2, 1)\" }} />Purchase</div>\r\n                    <Drawer anchor={'right'} open={this.state['right']} onClose={this.toggleDrawer('right', false)}>\r\n                        <AddNewPurchase isEdit={false} data=\"\" id={this.props.id} onClose={this.toggleDrawer('right', false)} />\r\n                    </Drawer>\r\n                </div>) : \" \"}\r\n\r\n                {this.props.compo === \"add_new_sale\" ? (<div>\r\n\r\n                    <div className=\"sale_button\" onClick={this.toggleDrawer('right', true)}><AiOutlinePlus className=\"button_icons\" style={{ color: \"rgba(66, 199, 66, 1)\" }} /> Sale</div>\r\n\r\n                    <Drawer anchor={'right'} open={this.state['right']} onClose={this.toggleDrawer('right', false)}>\r\n                        <AddNewsale isEdit={false} data=\"\" id={this.props.id} onClose={this.toggleDrawer('right', false)} />\r\n                    </Drawer>\r\n                </div>) : \" \"}\r\n\r\n\r\n                {\r\n                    this.props.compo === \"help\" ?\r\n                        (<div>\r\n                            <div className=\"nav_link\" onClick={this.toggleDrawer('right', true)}>\r\n                                Help\r\n                            </div>\r\n                            <Drawer anchor={'right'} open={this.state['right']} onClose={this.toggleDrawer('right', false)}>\r\n                                <Help onClose={this.toggleDrawer('right', false)} />\r\n                            </Drawer>\r\n                        </div>) : \" \"\r\n                }\r\n\r\n                {\r\n                    this.props.compo === \"settings\" ?\r\n                        (<div>\r\n                            <div className=\"nav_link\" onClick={this.toggleDrawer('right', true)}>\r\n                                Settings\r\n                            </div>\r\n                            <Drawer anchor={'right'} open={this.state['right']} onClose={this.toggleDrawer('right', false)}>\r\n                                <Settings onClose={this.toggleDrawer('right', false)} />\r\n                            </Drawer>\r\n                        </div>) : \" \"\r\n                }\r\n\r\n\r\n\r\n                {\r\n                    this.props.compo === \"create_book\" ?\r\n                        (<div>\r\n                            <button className=\"create_book\" style={{ width: \"100%\" }} onClick={this.toggleDrawer('right', true)}>\r\n                                Create New Book\r\n                            </button>\r\n\r\n\r\n                            <Drawer anchor={'right'} open={this.state['right']} onClose={this.toggleDrawer('right', false)}>\r\n                                <CreateNoteBook onClose={this.toggleDrawer('right', false)} />\r\n                            </Drawer>\r\n                        </div>) : null\r\n                }\r\n                {\r\n                    this.props.compo === \"update_book\" ?\r\n                        (<div>\r\n                            <button style={{ width: \"100%\", fontSize: \"15px\", margin: \"0\", padding: \"0\", background: \"none\", border: \"none\" }} onClick={this.toggleDrawer('right', true)}>\r\n                                Rename\r\n                            </button>\r\n\r\n\r\n                            <Drawer anchor={'right'} open={this.state['right']} onClose={this.toggleDrawer('right', false)}>\r\n                                <UpdateBook id={this.props.id} onClose={this.toggleDrawer('right', false)} />\r\n                            </Drawer>\r\n                        </div>) : null\r\n                }\r\n\r\n\r\n\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport CustomDrawer from '../../components/Drawer'\r\nimport \"./Header.scss\"\r\nimport Logo from \"../../Assets/Svg/app-logo.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport { generatePDFUtil } from \"../../utils/pdfGenerator\";\r\nclass Header extends Component {\r\n    render() {\r\n\r\n        return (\r\n            // Header on top\r\n            <div className=\"header\">\r\n\r\n\r\n                {/* Icon holder to make responsive */}\r\n                <div style={{ display: \"flex\" }} className=\"header_left\">\r\n                    <img style={{ width: \"30px\", height: \"50px\", margin: \"auto 10px\" }} src={Logo} alt=\"\" />\r\n\r\n                    <p style={{ fontWeight: \"bold\", fontSize: \"20px\" }}>Bookkeeping</p>\r\n                </div>\r\n                {/* Navigation links */}\r\n                <div className=\"header_right\">\r\n                    {/* Nav link */}\r\n                    {\r\n                        this.props.filterData ? (\r\n                            <div onClick={() => generatePDFUtil(this.props.filterData)} className=\"nav_link pdf_report\">\r\n                                PDF Report\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n\r\n                    {/* Nav link */}\r\n\r\n\r\n                    <CustomDrawer compo=\"help\" />\r\n                    {\r\n                        this.props.isAuth ? (\r\n                            <CustomDrawer compo=\"settings\" />\r\n                        ) : null\r\n                    }\r\n                    {/* Nav link */}\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.user.isAuth,\r\n        filterData: state.data.filterRecord,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Header);","import { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n\r\nexport const generatePDFUtil = (records) => {\r\n    const columnR = [\"Date\", \"Client Name  \", \"Product \", \"Price($)\", \"Qnty \", \"Sale($) \", \"Purchase($)\", \"Cash($)\", \"Credit($)\"];\r\n    const recordRows = [];\r\n    records.forEach((record) => {\r\n        let data = [\r\n            record.date,\r\n            record.person,\r\n            record.product_name,\r\n            record.price,\r\n            record.quantity,\r\n            record.sell === \"sell\" ? record.price * record.quantity : \"0.0\",\r\n            record.sell === \"purchase\" ? record.price * record.quantity : \"00:0\",\r\n            record.cash,\r\n            record.credit\r\n        ]\r\n        recordRows.push(data);\r\n    })\r\n\r\n    let total_sale = 0;\r\n    recordRows.forEach((data) => {\r\n        if (data[5] != \"00:0\")\r\n            total_sale += Number(data[5]);\r\n    })\r\n\r\n    let total_purchase = 0;\r\n    recordRows.forEach((data) => {\r\n        if (data[6] != \"00:0\")\r\n            total_purchase += Number(data[6]);\r\n    })\r\n    console.log(total_purchase)\r\n    let total_cash = 0;\r\n    recordRows.forEach((data) => {\r\n\r\n        total_cash += Number(data[7]);\r\n    })\r\n    let total_credit = 0;\r\n    recordRows.forEach((data) => {\r\n\r\n        total_credit += Number(data[8]);\r\n    })\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(12);\r\n    doc.text('Powered By BookKeeping', 150, 20);\r\n    doc.text('Statement', 100, 30);\r\n    doc.text('(summery)', 100, 40);\r\n    const column = [\"Total Purchase($)\", \"Total Sale($) \", \"Final Cash($) \", \"Final Credit($)\"];\r\n    const tableRows = [];\r\n\r\n    let sum = [\r\n        total_purchase,\r\n        total_sale,\r\n\r\n        total_cash,\r\n        total_credit\r\n    ]\r\n    tableRows.push(sum);\r\n    doc.autoTable(column, tableRows, { startY: 44 });\r\n\r\n\r\n\r\n\r\n\r\n    let last_row = [\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"Total\",\r\n        total_sale,\r\n        total_purchase,\r\n        total_cash,\r\n        total_credit\r\n    ]\r\n    recordRows.push(last_row);\r\n\r\n    doc.autoTable(columnR, recordRows, { startY: 70 });\r\n    // doc.text(businessName, 15, 15);\r\n\r\n    // doc.text(address, 15, 22);\r\n    // doc.text(zip, 15, 29);\r\n    // doc.text(country, 15, 36);\r\n    // doc.setFontSize(16);\r\n    // doc.text(`${type} Report`, 140, 10);\r\n    // doc.text(ExpenseId, 140, 20);\r\n    // doc.setFontSize(12)\r\n    // doc.text(`Report Time  :  ${title}`, 15, 47);\r\n    // doc.text(`Submitted By  : ${submittedBy}`, 15, 54);\r\n    // doc.text(`Reported To  : ${reportedTo}`, 15, 61);\r\n    // doc.text(`Submitted On  :  ${submittedOn}`, 120, 54);\r\n    // doc.text(`Reporting Period  :  ${reportingPeriodStart}  ${reportingPeriodEnd}`, 120, 61);\r\n    // const column = [\"Date\", \"Client Name\", \"Product Details\", \"Quantity\", \"Price\", \"Amount\"];\r\n    // const tableRows = [];\r\n    // expences.forEach((record) => {\r\n    //     const data = [\r\n    //         record.date,\r\n    //         record.name,\r\n    //         record.details,\r\n    //         record.quantity,\r\n    //         record.price,\r\n    //         record.amount\r\n    //     ]\r\n    //     tableRows.push(data);\r\n    // })\r\n    // doc.autoTable(column, tableRows, { startY: 75 });\r\n\r\n    // doc.text(`Total Amount : ${totalAmount}`, 160, 60 + 20 * expences.length)\r\n    doc.save(`report.pdf`);\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AddNewPurchase from '../overlays/AddNewPurchase/AddNewPurchase';\r\nimport AddNewSale from \"../overlays/AddNewSale/AddNewsale\";\r\nclass Transactions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookData: this.props.bookRecord,\r\n            activeId: null,\r\n            activeBook: null,\r\n            right: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    toggleDrawer = (anchor, open, id, book) => (event) => {\r\n        this.setState({\r\n            activeId: id,\r\n            activeBook: book\r\n        }, () => {\r\n            if (this.props.compo === \"update_book\")\r\n                this.props.onClick();\r\n            if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ ...this.state, [anchor]: open });\r\n        })\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{ overflowY: \"scroll\", height: \"270px\" }} className=\"transactions\">\r\n                {/* Transations lists displaying table */}\r\n                <table className=\"table\">\r\n                    <tr className=\"table_heading\">\r\n                        <th style={{ width: \"100px\" }}>Date&Time</th>\r\n                        <th>Client</th>\r\n                        <th>Product</th>\r\n                        <th style={{ width: \"80px\" }}>Entity Type</th>\r\n                        <th>Total Amount  {this.props.currency ? (this.props.currency) : null}</th>\r\n                        <th>Cash {this.props.currency ? (this.props.currency) : null}</th>\r\n                        <th>Credit {this.props.currency ? (this.props.currency) : null}</th>\r\n\r\n                    </tr>\r\n                    {\r\n                        this.props.filterRecord.length > 0 ? (\r\n                            this.props.filterRecord.map((book) => {\r\n\r\n\r\n                                return (\r\n                                    <tr style={{ cursor: \"pointer\" }} onClick={this.toggleDrawer(\"right\", true, book.offline_id, book)}>\r\n                                        <td>{book.date} {book.time}</td>\r\n                                        <td>{book.person}</td>\r\n                                        <td>{book.product_name}</td>\r\n                                        <td>{book.sell}</td>\r\n                                        <td>{book.price * book.quantity}</td>\r\n                                        <td>{book.cash}</td>\r\n                                        <td>{book.credit}</td>\r\n\r\n\r\n                                    </tr>\r\n                                )\r\n\r\n\r\n                            })\r\n                        ) : (\r\n                            <div style={{ position: \"absolute\", top: \"70%\", left: \"52%\", transform: \"translate(-50%,-50%)\" }}>\r\n                                <h3>Click on below button to add a new entry</h3>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </table>\r\n                <Drawer anchor={'right'} open={this.state['right']} onClose={this.toggleDrawer('right', false)}>\r\n                    {\r\n                        this.state.activeBook != null && this.state.activeBook.sell == \"purchase\" ?\r\n                            <AddNewPurchase id={this.state.activeId} isEdit={true} data={this.state.activeBook} onClose={this.toggleDrawer('right', false)} /> :\r\n                            <AddNewSale id={this.state.activeId} isEdit={true} data={this.state.activeBook} onClose={this.toggleDrawer('right', false)} />\r\n\r\n\r\n                    }\r\n\r\n                </Drawer>\r\n                {/* <CustomDrawer id={this.state.activeId} data={this.state.activeBook} isEdit={true} compo=\"add_purchase\" /> */}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        bookRecord: state.data.bookRecords,\r\n        activeId: state.data.activeId,\r\n        filterRecord: state.data.filterRecord,\r\n        currency: state.user.user.currency\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);","import React, { Component } from 'react'\r\nimport \"./bookdetail.scss\"\r\nimport Transactions from '../../Transaction/Transactions'\r\nimport CustomDrawer from \"../../Drawer\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_filter } from \"../../../store/actions/dataAction\";\r\nconst payment = [\r\n    {\r\n        id: \"0\",\r\n        name: \"All\"\r\n    }, {\r\n        id: \"1\",\r\n        name: \"Cash\"\r\n    }, {\r\n        id: \"2\",\r\n        name: \"Credit\"\r\n    }\r\n]\r\n\r\nconst dateType = [\r\n    {\r\n        id: '0',\r\n        name: \"All\"\r\n    }, {\r\n        id: \"1\",\r\n        name: \"Today\"\r\n    }, {\r\n        id: \"2\",\r\n        name: \"This Week\"\r\n    }, {\r\n        id: \"3\",\r\n        name: \"This Month\"\r\n    }\r\n]\r\n\r\nconst entiry_type = [\r\n    {\r\n        id: \"0\",\r\n        name: \"Sale\"\r\n    }, {\r\n        id: \"1\",\r\n        name: \"Purchase\"\r\n    }\r\n]\r\nlet newDate = new Date()\r\nlet date = newDate.getDate();\r\nlet month = newDate.getMonth() + 1;\r\nlet year = newDate.getFullYear();\r\nlet finalCurrentData = `${year}-${month < 10 ? `0${month}` : `${month}`}-${date < 10 ? `0${date}` : `${date}`}`;\r\nclass BookDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            payment_type_id: 0,\r\n            date_type_id: 0,\r\n            entity_type_id: 0,\r\n            value: ''\r\n        }\r\n    }\r\n\r\n\r\n    getTotalSale = (id) => this.props.filterRecord.filter((data) => data.sell === \"sell\").length\r\n    getTotalPurchase = (id) => this.props.filterRecord.filter((data) => data.sell === \"purchase\").length\r\n\r\n    getFinalBalance = (id) => {\r\n\r\n        let amount = 0;\r\n        this.props.filterRecord.forEach((entry) => {\r\n            if (entry.sell === \"sell\") {\r\n                amount += (entry.price * entry.quantity)\r\n            } else {\r\n                amount -= (entry.price * entry.quantity);\r\n            }\r\n        })\r\n\r\n        return amount;\r\n    }\r\n\r\n    getTotalCash = () => {\r\n        let amount = 0;\r\n        this.props.filterRecord.forEach((entry) => {\r\n            if (entry.date === finalCurrentData)\r\n                amount += Number(entry.cash);\r\n        })\r\n        return amount;\r\n    }\r\n\r\n    getTotalCredit = () => {\r\n        let amount = 0;\r\n        this.props.filterRecord.forEach((entry) => {\r\n            if (entry.date === finalCurrentData)\r\n                amount += Number(entry.credit);\r\n        })\r\n\r\n        return amount;\r\n    }\r\n    handlePaymentChange = (id) => {\r\n        this.setState({\r\n            payment_type_id: id\r\n        }, () => {\r\n            this.props.applyFilter(this.state.payment_type_id, \"payment\", null)\r\n        })\r\n    }\r\n\r\n    handleDateChange = (id) => {\r\n        this.setState({\r\n            date_type_id: id\r\n        }, () => {\r\n            this.props.applyFilter(this.state.date_type_id, \"date\", null)\r\n        })\r\n    }\r\n\r\n    handleEntityChange = (id) => {\r\n\r\n        this.setState({\r\n            entity_type_id: id\r\n        }, () => {\r\n            this.props.applyFilter(this.state.entity_type_id, \"entity\", null)\r\n        })\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        let val = e.target.value;\r\n        this.setState({\r\n            value: e.target.value\r\n        }, () => {\r\n            this.props.applyFilter(val, \"search\", val)\r\n        })\r\n    }\r\n    render() {\r\n        let bookid = window.location.pathname.split(\"/\")[1];\r\n\r\n        return (\r\n            <div className=\"book_details_container\">\r\n                <div className=\"book_details\">\r\n                    {/* Search box */}\r\n                    <div className=\"search_box\">\r\n                        {/* Search input box */}\r\n                        <input onChange={this.handleSearchChange} type=\"text\" placeholder=\"Search by Product Name, Client Name\" />\r\n                    </div>\r\n\r\n                    {/* Filter options, balance Info, Total Purchase,\r\n                Total sales */}\r\n                    <div className=\"filters_and_info\">\r\n                        <div className=\"left_box\">\r\n                            {/* filters */}\r\n                            <div className=\"filters\">\r\n                                {/* Filter options one */}\r\n                                <div className=\"filter_options\">\r\n                                    <div className=\"filter_type\">Payment Type</div>\r\n                                    <div className=\"type_options\">\r\n                                        {\r\n                                            payment.map((type) => {\r\n                                                return (\r\n                                                    <div key={type.id} onClick={() => this.handlePaymentChange(type.id)} style={{ backgroundColor: this.state.payment_type_id === type.id ? \"#715AFF\" : \"white\", color: this.state.payment_type_id === type.id ? \"white\" : \"black\" }} className=\"option\">{type.name}</div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {/* Filter options --Date */}\r\n\r\n                                <div className=\"filter_options\">\r\n                                    <div className=\"filter_type\">Date Type</div>\r\n                                    <div className=\"type_options\">\r\n                                        {\r\n                                            dateType.map((type) => {\r\n                                                return (\r\n                                                    <div key={type.id} onClick={() => this.handleDateChange(type.id)} style={{ backgroundColor: this.state.date_type_id == type.id ? \"#715AFF\" : \"white\", color: this.state.date_type_id == type.id ? \"white\" : \"black\" }} className=\"option\">{type.name}</div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {/* Filter options --Entity type */}\r\n\r\n                                <div className=\"filter_options\">\r\n                                    <div className=\"filter_type\">Entity Type</div>\r\n                                    <div className=\"type_options\">\r\n\r\n                                        {\r\n                                            entiry_type.map((type) => {\r\n                                                return (\r\n                                                    <div key={type.id} onClick={() => this.handleEntityChange(type.id)} style={{ backgroundColor: this.state.entity_type_id == type.id ? \"#715AFF\" : \"white\", color: this.state.entity_type_id == type.id ? \"white\" : \"black\" }} className=\"option\">{type.name}</div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Balance Info */}\r\n                            <div className=\"balance_info\">\r\n                                {/* Box showing Total Sale  */}\r\n                                <div className=\"box\">\r\n                                    <div className=\"box_title\">Total sale  {this.props.currency ? (this.props.currency) : null}</div>\r\n                                    <div className=\"box_value\">{this.getTotalSale(bookid)}</div>\r\n                                </div>\r\n                                {/* Box showing Total Purchase  */}\r\n\r\n                                <div className=\"box\">\r\n                                    <div className=\"box_title\">Total Purchase {this.props.currency ? (this.props.currency) : null}</div>\r\n                                    <div className=\"box_value\">{this.getTotalPurchase(bookid)}</div>\r\n                                </div>\r\n                                {/* Box showing Total Final Balance */}\r\n\r\n                                <div className=\"box\">\r\n                                    <div className=\"box_title\">Final Balance {this.props.currency ? (this.props.currency) : null}</div>\r\n                                    <div className=\"box_value\">{this.getFinalBalance(bookid)}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {/* Right box */}\r\n                        <div className=\"right_box\">\r\n\r\n                            <div className=\"right_box_top\">\r\n                                <div className=\"right_box_text\">Daily Final Balance</div>\r\n                                <div className=\"right_box_text\">{date < 10 ? `0${date}` : `${date}`}/{month < 10 ? `0${month}` : `${month}`}/{year}</div>\r\n\r\n                            </div>\r\n                            <div className=\"right_balance_info\">\r\n                                {/* Box showing Today's Total Sale  */}\r\n\r\n                                <div className=\"box\">\r\n                                    <div className=\"box_title\">Cash {this.props.currency ? (this.props.currency) : null}</div>\r\n                                    <div className=\"box_value\">{this.getTotalCash()}</div>\r\n                                </div>\r\n                                {/* Box showing Today's Total credit  */}\r\n\r\n                                <div className=\"box\">\r\n                                    <div className=\"box_title\">Credit {this.props.currency ? (this.props.currency) : null}</div>\r\n                                    <div className=\"box_value\">{this.getTotalCredit()}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                {/* Transactions Detais table  */}\r\n                <Transactions value={this.state.value} bookId={bookid} />\r\n                {/* Action buttons --Purchase, --sale */}\r\n                <div className=\"action_buttons\">\r\n                    <CustomDrawer isEdit={false} data=\"\" id={bookid} compo=\"add_purchase\" />\r\n                    <CustomDrawer isEdit={false} data=\"\" id={bookid} compo=\"add_new_sale\" />\r\n\r\n                    {/* <input type=\"checkbox\" id=\"togglePurchase\" /> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        activeId: state.data.activeId,\r\n        bookRecords: state.data.bookRecords,\r\n        filterRecord: state.data.filterRecord,\r\n        currency: state.user.user.currency\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        applyFilter: (filterId, filterType, bookId) => dispatch(set_filter(filterId, filterType, bookId))\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDetails)\r\n","import { SET_USER } from \"./actionType\";\r\nimport axios from \"../../utils/axios\";\r\nimport { getBook } from \"./bookAction\";\r\nexport const login_user = (userData) => async dispatch => {\r\n    try {\r\n        let user = await axios.get(`/getUser/${userData.user.uid}`);\r\n        localStorage.setItem(\"id\", userData.user.uid);\r\n\r\n        if (user.data.user_id) {\r\n\r\n            dispatch({ type: SET_USER, payload: user.data })\r\n        } else {\r\n            const result = await axios.post(`/sellregister/saveuser/${userData.user.uid}`, {\r\n                phone_no: userData.user.phoneNumber,\r\n                refreshToken: userData.user.refreshToken\r\n            })\r\n\r\n            dispatch({ type: SET_USER, payload: result.data })\r\n\r\n        }\r\n\r\n        window.location.href = \"/\";\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const get_user_status = () => async dispatch => {\r\n\r\n    try {\r\n\r\n        let result = await axios.get(`/getUser/${localStorage.getItem(\"id\")}`);\r\n\r\n        if (result.data.user_id != null) {\r\n            dispatch({ type: SET_USER, payload: result.data });\r\n            dispatch(getBook());\r\n        }\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nexport default class CustomDialog extends Component {\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                keepMounted\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Are you sure you want to delete this book?\"}</DialogTitle>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={() => { this.props.onClickYes(); this.props.handleClose() }} color=\"primary\">\r\n                        Yes\r\n                    </Button>\r\n                    <Button onClick={this.props.handleClose} color=\"primary\">\r\n                        No\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Dialog from \"../Dialog/Dialog\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CustomDrawer from \"../Drawer\";\r\nimport { connect } from \"react-redux\";\r\nimport { delete_book } from \"../../store/actions/bookAction\";\r\nclass MenuCustom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n        }\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            isOpen: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            isOpen: false\r\n        })\r\n        this.props.handleClose();\r\n    }\r\n\r\n    handleDeleteBook = () => {\r\n        this.props.deleteBook(this.props.id, this.props.user);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={this.props.anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(this.props.anchorEl)}\r\n                    onClose={this.props.handleClose}\r\n                >\r\n                    <MenuItem >\r\n                        <CustomDrawer onClick={this.handleClose} id={this.props.id} compo=\"update_book\" />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleClickOpen}>Delete</MenuItem>\r\n\r\n                </Menu>\r\n                <Dialog onClickYes={this.handleDeleteBook} open={this.state.isOpen} handleClose={this.handleClose} />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteBook: (id, user) => dispatch(delete_book(id, user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuCustom);","import React, { Component } from 'react'\r\nimport BookDetails from '../../components/Book/BookDetail/Bookdetail'\r\nimport \"./dashboard.scss\"\r\nimport CustomDrawer from '../../components/Drawer'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport { getBook } from \"../../store/actions/bookAction\";\r\nimport { get_user_status } from \"../../store/actions/authAction\";\r\nimport Menu from \"../../components/Menu/Menu\";\r\n\r\nclass Dashbaord extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            activeLink: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getBook();\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget\r\n        })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        })\r\n    };\r\n\r\n    handleBookClick = (id) => {\r\n        this.props.setRecordWithId(id);\r\n        this.setState({\r\n            activeLink: id\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    this.props.isAuth ? (\r\n                        <div className=\"mainbody\">\r\n\r\n                            {/* First column -- Books List */}\r\n                            <div className=\"books_list\">\r\n\r\n                                {\r\n                                    this.props.books.map((book) => {\r\n                                        return (\r\n                                            <Link style={{ backgroundColor: this.state.activeLink === book.offline_id ? \"rgba(113, 90, 255, 1)\" : null, borderRadius: \"5px\" }} to={`/${book.offline_id}`} onClick={() => this.handleBookClick(book.offline_id)} key={book.offline_id}>\r\n                                                <div className=\"book_section\">\r\n                                                    <div className=\"created_date\">\r\n                                                        <p>{book.date}</p>\r\n                                                        <BiDotsVerticalRounded className=\"book_menu\" onClick={this.handleClick} />\r\n                                                    </div>\r\n                                                    {/* Book Name */}\r\n                                                    <div className=\"book_name\">{book.book_name}</div>\r\n                                                </div>\r\n                                                {/* Book created Date */}\r\n\r\n                                            </Link>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n\r\n                                {/* Button to create new book item */}\r\n                                <CustomDrawer compo=\"create_book\" />\r\n\r\n                            </div>\r\n                            {/* Book Details */}\r\n                            <Route path=\"/:bookid\">\r\n                                <div className=\"book_details\">\r\n                                    <BookDetails />\r\n                                </div>\r\n                            </Route>\r\n\r\n\r\n                            {\r\n                                window.location.pathname == \"/\" ? (\r\n                                    <div style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%,-50%)\" }}>\r\n                                        <h1>{!this.props.books.length > 0 ? \"Create a new book to start adding entries\" : \"Click on any book name to open the book\"}</h1>\r\n                                    </div>\r\n                                ) : null\r\n                            }\r\n\r\n\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <Redirect to=\"/login\" />\r\n                            {/* <h1>Invalid user</h1>\r\n                            <a href=\"/login\">Go to login page</a> */}\r\n                        </React.Fragment>\r\n\r\n                    )\r\n                }\r\n                <Menu id={this.state.activeLink} handleClick={this.handleClick} handleClose={this.handleClose} anchorEl={this.state.anchorEl} />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        books: state.data.books,\r\n        isAuth: state.user.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getBook: () => dispatch(getBook()),\r\n        setUser: () => dispatch(get_user_status()),\r\n        setRecordWithId: (id) => dispatch({ type: \"SET_RECORD_WITH_ID\", payload: id })\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashbaord);\r\n\r\n","\r\nimport { SET_USER, UPDATE_USER } from \"../actions/actionType\";\r\n\r\n\r\nconst initialState = {\r\n    user: null,\r\n    isAuth: false,\r\n\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                user: action.payload,\r\n                isAuth: true\r\n            }\r\n        case UPDATE_USER:\r\n            let payload = action.payload;\r\n            let updated_user = { ...state.user, ...payload }\r\n\r\n            return {\r\n                ...state,\r\n                user: updated_user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { ADD_BOOK, SET_BOOK, DELETE_BOOK, UPDATE_BOOK, SET_FILTER, SET_RECORD, APPLY_FILTER } from \"../actions/actionType\";\r\n\r\n\r\nconst initialState = {\r\n    books: [],\r\n    bookRecords: [],\r\n    filter: {},\r\n    filterRecord: null,\r\n    activeId: null\r\n}\r\n\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_BOOK:\r\n\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n            }\r\n        case ADD_BOOK:\r\n            let updated_book = [...state.books, action.payload];\r\n            return {\r\n                ...state,\r\n                books: updated_book\r\n            }\r\n        case DELETE_BOOK:\r\n            let updated_books = state.books.filter((book) => book.offline_id !== action.payload);\r\n            return {\r\n                ...state,\r\n                books: updated_books\r\n            }\r\n        case UPDATE_BOOK:\r\n            let update_books = state.books;\r\n            let new_book = update_books.find((book) => book.offline_id === action.payload.id);\r\n            new_book = { ...new_book, book_name: action.payload.bookName }\r\n            update_books = update_books.filter((book) => book.offline_id !== action.payload.id);\r\n            update_books = [...update_books, new_book]\r\n            return {\r\n                ...state,\r\n                books: update_books\r\n            }\r\n        case \"SET_RECORD_WITH_ID\":\r\n\r\n            let books = state.books;\r\n            let book = books.find((book) => book.offline_id === action.payload);\r\n            let bookRecords = book.sellbook;\r\n            bookRecords.sort((a, b) => {\r\n                return new Date(b.date).getTime() - new Date(a.date).getTime();\r\n            })\r\n            return {\r\n                ...state,\r\n                activeId: action.payload,\r\n                bookRecords: bookRecords,\r\n                filterRecord: bookRecords\r\n            }\r\n        case SET_RECORD:\r\n            let bookRecord = state.bookRecords;\r\n            bookRecord = [...bookRecord, action.payload];\r\n\r\n            return {\r\n                ...state,\r\n                bookRecords: bookRecord,\r\n                filterRecord: bookRecord,\r\n            }\r\n        case SET_FILTER:\r\n            let currentFilter = state.filter;\r\n            let filterConfig = action.payload;\r\n            if (filterConfig.filterType === \"entity\")\r\n                currentFilter.entity = filterConfig.filterId\r\n            else if (filterConfig.filterType === \"date\")\r\n                currentFilter.date = filterConfig.filterId\r\n            else if (filterConfig.filterType === \"payment\")\r\n                currentFilter.payment = filterConfig.filterId\r\n            else\r\n                currentFilter.search = filterConfig.filterId\r\n\r\n            return {\r\n                ...state,\r\n                filter: currentFilter\r\n            }\r\n        case APPLY_FILTER:\r\n            let filterRecord = state.bookRecords;\r\n            let filter = state.filter;\r\n\r\n            for (const key in filter) {\r\n                if (key == \"entity\") {\r\n                    if (filter[key] == 1)\r\n                        filterRecord = filterRecord.filter((data) => data.sell === \"purchase\")\r\n                    else\r\n                        filterRecord = filterRecord.filter((data) => data.sell === \"sell\")\r\n                } else if (key == \"search\") {\r\n                    let val = filter[key];\r\n                    filterRecord = filterRecord.filter((data) => data.product_name.startsWith(val) || data.person.startsWith(val))\r\n                } else if (key == \"date\") {\r\n                    if (filter[key] == 1) {\r\n                        let newDate = new Date()\r\n                        let date = newDate.getDate();\r\n                        let month = newDate.getMonth() + 1;\r\n                        let year = newDate.getFullYear();\r\n                        let finalDate = `${year}-${month < 10 ? `0${month}` : `${month}`}-${date < 10 ? `0${date}` : `${date}`}`;\r\n                        filterRecord = filterRecord.filter((data) => data.date == finalDate);\r\n                    } else if (filter[key] == 2) {\r\n                        var curr = new Date;\r\n                        var firstday = new Date(curr.setDate(curr.getDate() - curr.getDay())).getTime();\r\n                        var lastday = new Date(curr.setDate(curr.getDate() - curr.getDay() + 6)).getTime();\r\n\r\n                        filterRecord = filterRecord.filter((data) => new Date(data.date).getTime() > firstday && new Date(data.date).getTime() < lastday)\r\n                    } else if (filter[key] == 3) {\r\n                        let date = new Date();\r\n                        let firstday =\r\n                            new Date(date.getFullYear(), date.getMonth(), 1).getTime();\r\n\r\n                        let lastday =\r\n                            new Date(date.getFullYear(), date.getMonth() + 1, 0).getTime();\r\n\r\n\r\n                        filterRecord = filterRecord.filter((data) => new Date(data.date).getTime() > firstday && new Date(data.date).getTime() < lastday)\r\n                    }\r\n                } else if (key == \"payment\") {\r\n                    if (filter[key] == 2) {\r\n                        filterRecord = filterRecord.filter((data) => data.credit != 0)\r\n                    } else if (filter[key] == 1) {\r\n                        filterRecord = filterRecord.filter((data) => data.cash != 0)\r\n                    }\r\n                }\r\n\r\n            }\r\n            return {\r\n                ...state,\r\n                filterRecord\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dataReducer;\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\";\r\nimport dataReducer from \"./bookReducer\";\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducer from \"./reducers/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nexport default createStore(reducer, applyMiddleware(thunk));","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAsrFBvxi8WMq6dQn2jkiLL_J0YRyHOJ2A\",\r\n    authDomain: \"bookkeeping-login.firebaseapp.com\",\r\n    projectId: \"bookkeeping-login\",\r\n    storageBucket: \"bookkeeping-login.appspot.com\",\r\n    messagingSenderId: \"116311955661\",\r\n    appId: \"1:116311955661:web:4bda6e3fbd4ae311463184\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const generateOtp = async (num, captchaRef, cb, showOTP) => {\r\n    try {\r\n        cb(true, false, \"\");\r\n        const recaptch = new firebase.auth.RecaptchaVerifier(captchaRef.current);\r\n        const number = num;\r\n        let response = await firebase.auth().signInWithPhoneNumber(number, recaptch);\r\n\r\n        showOTP(response)\r\n\r\n        // cb(false, true, data);\r\n    } catch (error) {\r\n        cb(false, false, \"\");\r\n        console.log(error)\r\n    }\r\n\r\n\r\n\r\n}","import React, { Component } from 'react'\r\nimport \"./login.scss\";\r\nimport { generateOtp } from \"../../utils/firebase\";\r\nimport Logo from \"../../Assets/Svg/app-logo.svg\";\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport { login_user } from \"../../store/actions/authAction\";\r\nimport \"../../../node_modules/react-phone-input-2/lib/style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isInProcess: false,\r\n            number: null,\r\n            isOtpShow: false,\r\n            otp: '',\r\n            res: null,\r\n            isErrorShow: false\r\n\r\n        }\r\n        this.captchaRef = React.createRef()\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n\r\n        generateOtp(\"+\" + this.state.number, this.captchaRef, (val, status, data,) => {\r\n            this.setState({\r\n                isInProcess: val\r\n            })\r\n            if (status) {\r\n                this.props.login(data)\r\n            }\r\n        }, (res) => {\r\n            this.setState({\r\n                isOtpShow: true,\r\n                res: res,\r\n                isInProcess: false\r\n            })\r\n\r\n\r\n        });\r\n    }\r\n\r\n    handleInputChange = (data) => {\r\n\r\n        this.setState({\r\n            number: data.phone\r\n        })\r\n    }\r\n    handleOtp = (e) => {\r\n\r\n        this.setState({\r\n            otp: e.target.value\r\n        })\r\n    }\r\n    submitOTP = () => {\r\n        this.state.res.confirm(this.state.otp).then((data) => {\r\n\r\n            this.props.login(data);\r\n\r\n        }).catch((error) => {\r\n            this.setState({\r\n                isErrorShow: true\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    !this.props.isAuth ? (\r\n                        <div className=\"login\">\r\n                            <div className=\"login_header\">\r\n                                <div className=\"company_image\">\r\n                                    <img src={Logo} alt=\"logo\" />\r\n                                </div>\r\n                                <div className=\"company_title\">Bookkeeping</div>\r\n                            </div>\r\n                            <div className=\"company_body\">\r\n                                <div className=\"company_body_left\">\r\n                                    <div className=\"body_left_header\">Track Sales & Purchases</div>\r\n                                    <div className=\"body_left_desc\">\r\n                                        Bookkeeping App is simple\r\n                                        sale & purchase recording software\r\n                                        to manage all cash & credit transactions\r\n                                    </div>\r\n                                    <ul list-style-type=\"radio\">\r\n                                        <li>All Cash& Due in 1 App.</li>\r\n                                        <li>Daily Final Balance.</li>\r\n                                        <li>Custom Pdf Reports.</li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"company_body_right\">\r\n                                    <div className=\"body_right_header\">\r\n                                        Enter your mobile number to continue\r\n                                    </div>\r\n\r\n                                    <div className=\"body_right_input\">\r\n                                        <p>Your Mobile Number</p>\r\n                                        <div className=\"phone_section\">\r\n                                            <PhoneInput\r\n                                                country={'in'}\r\n                                                value={this.state.number}\r\n                                                onChange={phone => this.handleInputChange({ phone })}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        !this.state.isOtpShow ? (\r\n                                            <div ref={this.captchaRef} className=\"recaptcha-container\"></div>\r\n                                        ) : null\r\n                                    }\r\n\r\n                                    {\r\n                                        this.state.isOtpShow ? (\r\n                                            <React.Fragment>\r\n                                                <input value={this.state.otp} onChange={this.handleOtp} style={{ margin: \"10px auto\", padding: \"7px\", width: \"95%\" }} type=\"text\" placeholder=\"Enter the OTP\" />\r\n                                                <div className=\"submit_button\">\r\n                                                    <button onClick={this.submitOTP}>Submit</button>\r\n                                                </div>\r\n\r\n                                            </React.Fragment>\r\n\r\n                                        ) : null\r\n                                    }\r\n                                    {\r\n                                        this.state.isErrorShow ? (\r\n                                            <p style={{ color: \"red\", fontWeight: \"bold\" }}>Invalid OTP, try again later</p>\r\n                                        ) : null\r\n                                    }\r\n                                    <div className=\"submit_button\">\r\n                                        {\r\n                                            !this.state.isInProcess && !this.state.isOtpShow ? (\r\n                                                <button onClick={() => this.handleClick()} >\r\n                                                    Send OTP\r\n                                                </button>\r\n\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <Redirect to=\"/\" />\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        isAuth: state.user.isAuth,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (userData) => dispatch(login_user(userData))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react'\nimport Header from \"./Layout/Header/Header\";\nimport \"./App.css\"\nimport Dashboard from './Pages/DashBoard/Dashbaord';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport Login from './Pages/Login/Login';\nimport { get_user_status } from \"./store/actions/authAction\";\n\n\nclass App extends Component {\n\n\n  componentDidMount() {\n    if (!store.getState().user.isAuth) {\n      store.dispatch(get_user_status())\n    }\n\n  }\n  render() {\n\n    return (\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route path=\"/login\" >\n              <Login />\n            </Route>\n\n            <Route path=\"/\" >\n              <Header />\n\n              <Dashboard />\n            </Route>\n\n          </Switch>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/app-logo.93e986d7.svg\";"],"sourceRoot":""}